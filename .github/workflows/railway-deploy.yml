name: Deploy to Railway

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string
    secrets:
      railway_token:
        description: 'Railway authentication token'
        required: true
      staging_service_id:
        description: 'Railway staging service ID'
        required: false
      production_service_id:
        description: 'Railway production service ID'
        required: false

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on:
      group: self-hosted
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run db:generate

      - name: Build application
        run: npm run build:production

      - name: Install Railway CLI
        run: |
          if ! command -v railway &> /dev/null; then
            npm install -g @railway/cli
          fi

      - name: Deploy to Railway ${{ inputs.environment }}
        run: |
          echo "Deploying to ${{ inputs.environment }} environment..."

          if [ "${{ inputs.environment }}" = "staging" ]; then
            SERVICE_ID="${{ secrets.staging_service_id }}"
          elif [ "${{ inputs.environment }}" = "production" ]; then
            SERVICE_ID="${{ secrets.production_service_id }}"
          else
            echo "❌ Unknown environment: ${{ inputs.environment }}"
            exit 1
          fi

          if [ -z "$SERVICE_ID" ]; then
            echo "❌ Service ID not found for ${{ inputs.environment }} environment"
            exit 1
          fi

          echo "Using service ID: $SERVICE_ID"
          railway up --service "$SERVICE_ID" --environment "${{ inputs.environment }}"
          echo "✅ Deployment to ${{ inputs.environment }} completed successfully"
        env:
          RAILWAY_TOKEN: ${{ secrets.railway_token }}

      - name: Wait for deployment
        run: sleep 30

      - name: Validate deployment
        run: |
          if [ "${{ inputs.environment }}" = "staging" ]; then
            npm run deploy:validate:staging
          elif [ "${{ inputs.environment }}" = "production" ]; then
            npm run deploy:validate:production
          fi
